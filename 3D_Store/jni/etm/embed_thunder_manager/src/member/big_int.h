/*----------------------------------------------------------------------------------------------------------
author:	ZHANGSHAOHAN
created:	2010/05/24
-----------------------------------------------------------------------------------------------------------*/
#ifndef _BIG_INT_H_
#define _BIG_INT_H_

#ifdef __cplusplus
extern "C" 
{
#endif

#include "em_common/em_define.h"

#ifdef ENABLE_MEMBER

#define BI_MAXLEN 35

/*****************************************************************
基本操作与运算
Mov，赋值运算，可赋值为大数或普通整数，可重载为运算符“=”
Cmp，比较运算，可重载为运算符“==”、“!=”、“>=”、“<=”等
Add，加，求大数与大数或大数与普通整数的和，可重载为运算符“+”
Sub，减，求大数与大数或大数与普通整数的差，可重载为运算符“-”
Mul，乘，求大数与大数或大数与普通整数的积，可重载为运算符“*”
Div，除，求大数与大数或大数与普通整数的商，可重载为运算符“/”
Mod，模，求大数与大数或大数与普通整数的模，可重载为运算符“%”
*****************************************************************/
typedef struct tagBIG_INT
{
	_u32 _len;
	_u32 _value[BI_MAXLEN];
}BIG_INT;

/****************************************************************************************
大数比较
调用方式：N.Cmp(A)
返回值：若N<A返回-1；若N=A返回0；若N>A返回1
****************************************************************************************/
_int32 cmp(BIG_INT* a, BIG_INT* b);

/****************************************************************************************
大数赋值
调用方式：N.Mov(A)
返回值：无，N被赋值为A
****************************************************************************************/

void mov(BIG_INT* result, BIG_INT* a);

void mov_by_u64(BIG_INT* result, _u64 a);



/****************************************************************************************
大数相加
调用形式：N.Add(A)
返回值：N+A
****************************************************************************************/
void add(BIG_INT* result, BIG_INT* a, BIG_INT* b);

void add_by_u32(BIG_INT* result, BIG_INT* a, _u32 b);

/****************************************************************************************
大数相减
调用形式：N.Sub(A)
返回值：N-A
****************************************************************************************/
void sub(BIG_INT* result, BIG_INT* a, BIG_INT* b);

void sub_by_u32(BIG_INT* result, BIG_INT* a, _u32 b);

/****************************************************************************************
大数相乘
调用形式：N.Mul(A)
返回值：N*A
****************************************************************************************/
void mul(BIG_INT* result, BIG_INT* a, BIG_INT* b);

void mul_by_u32(BIG_INT* result, BIG_INT* a, _u32 b);


/****************************************************************************************
大数相除
调用形式：N.Div(A)
返回值：N/A
****************************************************************************************/
void div1(BIG_INT* result, BIG_INT* a, BIG_INT* b);

void div_by_u32(BIG_INT* result, BIG_INT* a, _u32 b);

/****************************************************************************************
大数求模
调用形式：N.Mod(A)
返回值：N%A
****************************************************************************************/
void mod(BIG_INT* result, BIG_INT* a, BIG_INT* b);

_u32 mod_by_u32(BIG_INT* a, _u32 b);

/****************************************************************************************
调用格式：N.Get(str,sys)
返回值：N被赋值为相应大数
sys暂时只能为10或16
****************************************************************************************/
void get(BIG_INT* result, const char* str, _u32 str_len);

/****************************************************************************************
调用格式：N.Put(str,sys)
返回值：无，参数str被赋值为N的sys进制字符串
sys暂时只能为10或16
****************************************************************************************/
_int32 put(BIG_INT* a, char* str, _u32 str_len);

/****************************************************************************************
求乘方的模
调用方式：N.RsaTrans(A,B)
返回值：X=N^A MOD B
****************************************************************************************/
void rsa(BIG_INT* result, BIG_INT* a, BIG_INT* b, BIG_INT* c);

#endif /* ENABLE_MEMBER */

#ifdef __cplusplus
}
#endif

#endif 
